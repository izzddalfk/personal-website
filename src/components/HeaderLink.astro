---
import type { HTMLAttributes } from "astro/types";
import { BASE_URL } from "../consts";

type Props = HTMLAttributes<"a">;

const { href, class: className, ...props } = Astro.props;
const pathname = Astro.url.pathname.replace(import.meta.env.BASE_URL, "");
const subpath = pathname.match(/[^\/]+/g);
const isActive = href === pathname || href === "/" + (subpath?.[0] || "");

// Adjust href to include BASE_URL for internal links
const fullHref =
  typeof href === "string" && href.startsWith("http") ? href : BASE_URL + href;
---

<a href={fullHref} class:list={[className, { active: isActive }]} {...props}>
  <slot />
</a>
<style>
  a {
    display: inline-block;
    text-decoration: none;
  }
  a.active {
    font-weight: bolder;
    text-decoration: underline;
  }
</style>
